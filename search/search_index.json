{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction This document outlines the business, stakeholder, and solution requirements, as well as the assumptions and risks, for the account funding via PayPal feature. It is intended for product managers, developers, quality assurance specialists, and other stakeholders. The text contains many technical terms, which are defined in the Glossary section for further clarity. You can refer to the Glossary for detailed explanations of these terms. Objective and solution concept This section describes business requirements, success metrics and assumptions. Context Bank X, our customer, aims to increase monthly user activity. They have identified that some of their users utilize the PayPal system in both their business and personal lives. As a result, Bank X wants to offer the option for users to fund their bank accounts via PayPal without incurring any commission. Business opportunity Platform can differentiate itself on the market by offering PayPal payment services as a separate product on its Payment Platform, accessible through a single API. This could give Platform a competitive advantage. Success metrics Within six months of implementation, ten percent of Platform customers subscribed to the PayPal service through the Payment Platform. Assumptions Customers will be interested in using the PayPal service through the Payment Platform. The PayPal service will be easy for customers to use and understand. Customers will trust the PayPal service and feel confident using it to fund their bank accounts. The Payment Platform will be able to handle the additional traffic and workload generated by the PayPal service. The PayPal service will be available and reliable during the implementation period. The integration of the PayPal service into the Payment Platform will be successful and will not cause any disruptions or issues. Limitations The System must provide PayPal money transfer service via single Platform API. User Classes and Characteristics End Users - these are the individuals who will be using the system to make payments or receive payments through PayPal. Bank - this is a business that accepts payments through PayPal. Security Specialists - these are the individuals responsible for ensuring the security of a bank's systems and processes. Payment Monitoring Specialists - these are the individuals responsible identifying and preventing fraudulent or unauthorized payment transactions, as well as analyzing and reviewing payment trends and patterns to identify potential risks or vulnerabilities. Developers - these are the individuals responsible for integrating PayPal into the system. Quality assurance specialists - these are the individuals responsible for testing the PayPal integration to ensure that it is working correctly. Project Scope Product Features: The client can authorize themselves The client can top up account via PayPal: Create order Capture payment for order Authorize payment for order The client can fetch order details Show order details The client in this case is a Bank that is using the API as a consumer. Conceptual Architecture Systems components: Bank User Interface Bank Server Platform Payment Platform Clients DataBase Platform API PayPal PayPal Processing Authorization Page PayPal API System Features Authorize API Consumer Authorization is the process of determining whether a client or user has the permission to access a specific resource or perform a specific action through an API. This is typically done by verifying that the client or user has the necessary permissions or privileges to access the resource or perform the action. Use Cases Authorize API Consumer Participants Bank Server, Payment Platform, Clients DB, PayPal Processing Trigger Payment Platform accepts PayPal service request Diagram Main Flow 01: Bank Server sends Request to Payment Platform 02: Payment Platform retrieves the signature from the Authorization header 03: Payment Platform queries Clients DataBase to find Client by using keyId from signature 04: Clients public key returns from Clients DataBase 05: Payment Platform uses the public key to verify the signature 06: Payment Platform queries Clients DataBase to get Clients credentials 07: Clients credentials returns from Clients DataBase 08: Payment Platform sends the request to PayPal Processing to generate access token 09: PayPal Processing checks credentials and generates access token 10: Access token returns to Payment Platform ... 11: Bank Server gets operation result Alternative and Negative Flows \u2014 Step 02 of the Main flow : There is no signature in the header => Bank Server gets HTTP 400 Bad Request \u2014 Step 05 of the Main flow : Signature verification failed => Bank Server gets HTTP 401 Unauthorized Result Client successfully authorized Solution Requirements User Story Requirements Priority As a Bank, I want to secure my PayPal credentials so that only I have access to them. \u2014 The System must have the capability to store and retrieve client credentials from a secure database. \u2014 The System must verify the authenticity and integrity of requests for client credentials by checking the request signature before providing access to the credentials. \u2014 The System must ensure that only authorized users can access and modify client credentials, and that all access to client credentials is properly logged and audited for security and compliance purposes. High As a Security Specialist, I want to use credentials to secure my access to the system so that only I can create orders. \u2014 The System must have the ability to invoke the PayPal authorization service in order to generate an access token. \u2014 The System must ensure that the access token is securely stored and managed, and that it is only used for the purposes for which it was granted. High Top up account via PayPal Top up a bank account via PayPal service means to transfer funds from a PayPal account to a bank account. To top up a bank account via PayPal, the individual or business making the top-up will need to have a PayPal account and sufficient funds available in their account to complete the top-up. Use Cases Top up account via PayPal Participants End User, User Interface, Bank Server, Payment Platform, PayPal Processing Trigger End User wants to top up account via PayPal Diagram Main Flow 01: End User enters amount and clicks on the button to top up account via PayPal 02: User Interface sends request to Bank Server to create the order 03: Bank Server sends request to Payment Platform to create the Payment 04: Payment Platform sends request to PayPal Processing to create the order 05: PayPal Processing creates the order 06: PayPal processing returns to Payment Platform HTTP 201 Created code with order identifier, status and link to authorize payment 07: Payment Platform returns to Bank Server HTTP 201 Created code with payment data including order identifier, status and link 08: Bank Server returns to User Interface result with order identifier, status and link 09: User Interface redirects End User to the link to authorize payment 10: End User authorizes payment for the order 11: Authorization Page authorizes payment for the order 12: Authorization Page redirects back End User to the Banks User Interface 13: End User is waiting payment processing 14: User Interface sends request Bank Server to capture payment for order 15: Bank Server sends request to Payment Platform to submit the payment 16: Payment Platform sends request to PayPal Processing to capture payment for order 17: PayPal Ptocessing transfers money from End User account to Bank PayPal account 18: PayPal processing returns to Payment Platform HTTP 201 Created code with order identifier and status 19: Payment Platform returns to Bank Server HTTP 201 Created code with payment data including order identifier and status 20: Bank Server returns result to User Interface 21: User Interface renders operation result to the End User Alternative and Negative Flows \u2014 Step 04 of the Main flow: Authentication failed due to invalid authentication credentials or a missing Authorization header => PayPal returns HTTP 401 Unauthorized => Payment Platform repeats Generate access token use case and request to PayPal \u2014 Step 16 of the Main flow: Payer has not yet approved the Order for payment => PayPal returns HTTP 422 Unprocessable Entity => Payment Platform returns to Bank HTTP 422 Unprocessable Entity Result Client successfully topped up account via PayPal Solution Requirements User Story Requirements Priority As an End User, I want to be able to transfer funds from my PayPal account to my bank account so that I can access and use the money in my PayPal account. \u2014 The System must provide a service for creating payments through PayPal. \u2014 The System must have the capability to invoke the PayPal create order service in order to initiate a payment through PayPal. High As an End User, I want to be able to authorize payments in order to ensure that only I can make payments through my PayPal account. \u2014 The system must provide a link to the PayPal authorization page in order to allow end users to securely authorize the payment. \u2014 The System must provide a service for submitting payments through PayPal. \u2014 The System must have the capability to invoke the PayPal capture payment for order service in order to capture payment for an order High Show order details In cases where the system experiences a response timeout or misses transaction data, it must be able to retrieve order details from PayPal in order to ensure the integrity of the financial transactions. Use Cases Show Order Details Participants Bank Server, Payment Platform, PayPal Processing Trigger Bank wants to fetch order details Diagram Main Flow 01: Bank Server sends request to Payment Platform to fetch a payment resource by using the resource identifier 02: Payment Platform sends to PayPal Processing request to show order details 03: PayPal finds order by identifier 04: PayPal returns to Payment Platform HTTP 200 OK code with order details 05: Payment Platform returns to Bank Server HTTP 200 OK code with order details Alternative and Negative Flows \u2014 Step 02 of the Main flow : There is no order with requested ID => Bank Server gets HTTP 404 Not Found Result Order details were provided Solution Requirements User Story Requirements Priority As a Payment Monitoring Specialist, I want to be able to track orders in PayPal in order to monitor and manage financial transactions. \u2014 The System must provide a service for fetching payment details through PayPal. \u2014 The System must have the capability to invoke the PayPal show order details service in order to get order details Medium","title":"Software Requirements Specification"},{"location":"#introduction","text":"This document outlines the business, stakeholder, and solution requirements, as well as the assumptions and risks, for the account funding via PayPal feature. It is intended for product managers, developers, quality assurance specialists, and other stakeholders. The text contains many technical terms, which are defined in the Glossary section for further clarity. You can refer to the Glossary for detailed explanations of these terms.","title":"Introduction"},{"location":"#objective-and-solution-concept","text":"This section describes business requirements, success metrics and assumptions.","title":"Objective and solution concept"},{"location":"#context","text":"Bank X, our customer, aims to increase monthly user activity. They have identified that some of their users utilize the PayPal system in both their business and personal lives. As a result, Bank X wants to offer the option for users to fund their bank accounts via PayPal without incurring any commission.","title":"Context"},{"location":"#business-opportunity","text":"Platform can differentiate itself on the market by offering PayPal payment services as a separate product on its Payment Platform, accessible through a single API. This could give Platform a competitive advantage.","title":"Business opportunity"},{"location":"#success-metrics","text":"Within six months of implementation, ten percent of Platform customers subscribed to the PayPal service through the Payment Platform.","title":"Success metrics"},{"location":"#assumptions","text":"Customers will be interested in using the PayPal service through the Payment Platform. The PayPal service will be easy for customers to use and understand. Customers will trust the PayPal service and feel confident using it to fund their bank accounts. The Payment Platform will be able to handle the additional traffic and workload generated by the PayPal service. The PayPal service will be available and reliable during the implementation period. The integration of the PayPal service into the Payment Platform will be successful and will not cause any disruptions or issues.","title":"Assumptions"},{"location":"#limitations","text":"The System must provide PayPal money transfer service via single Platform API.","title":"Limitations"},{"location":"#user-classes-and-characteristics","text":"End Users - these are the individuals who will be using the system to make payments or receive payments through PayPal. Bank - this is a business that accepts payments through PayPal. Security Specialists - these are the individuals responsible for ensuring the security of a bank's systems and processes. Payment Monitoring Specialists - these are the individuals responsible identifying and preventing fraudulent or unauthorized payment transactions, as well as analyzing and reviewing payment trends and patterns to identify potential risks or vulnerabilities. Developers - these are the individuals responsible for integrating PayPal into the system. Quality assurance specialists - these are the individuals responsible for testing the PayPal integration to ensure that it is working correctly.","title":"User Classes and Characteristics"},{"location":"#project-scope","text":"Product Features: The client can authorize themselves The client can top up account via PayPal: Create order Capture payment for order Authorize payment for order The client can fetch order details Show order details The client in this case is a Bank that is using the API as a consumer.","title":"Project Scope"},{"location":"#conceptual-architecture","text":"Systems components: Bank User Interface Bank Server Platform Payment Platform Clients DataBase Platform API PayPal PayPal Processing Authorization Page PayPal API","title":"Conceptual Architecture"},{"location":"#system-features","text":"","title":"System Features"},{"location":"#authorize-api-consumer","text":"Authorization is the process of determining whether a client or user has the permission to access a specific resource or perform a specific action through an API. This is typically done by verifying that the client or user has the necessary permissions or privileges to access the resource or perform the action.","title":"Authorize API Consumer"},{"location":"#use-cases","text":"Authorize API Consumer Participants Bank Server, Payment Platform, Clients DB, PayPal Processing Trigger Payment Platform accepts PayPal service request Diagram Main Flow 01: Bank Server sends Request to Payment Platform 02: Payment Platform retrieves the signature from the Authorization header 03: Payment Platform queries Clients DataBase to find Client by using keyId from signature 04: Clients public key returns from Clients DataBase 05: Payment Platform uses the public key to verify the signature 06: Payment Platform queries Clients DataBase to get Clients credentials 07: Clients credentials returns from Clients DataBase 08: Payment Platform sends the request to PayPal Processing to generate access token 09: PayPal Processing checks credentials and generates access token 10: Access token returns to Payment Platform ... 11: Bank Server gets operation result Alternative and Negative Flows \u2014 Step 02 of the Main flow : There is no signature in the header => Bank Server gets HTTP 400 Bad Request \u2014 Step 05 of the Main flow : Signature verification failed => Bank Server gets HTTP 401 Unauthorized Result Client successfully authorized","title":"Use Cases"},{"location":"#solution-requirements","text":"User Story Requirements Priority As a Bank, I want to secure my PayPal credentials so that only I have access to them. \u2014 The System must have the capability to store and retrieve client credentials from a secure database. \u2014 The System must verify the authenticity and integrity of requests for client credentials by checking the request signature before providing access to the credentials. \u2014 The System must ensure that only authorized users can access and modify client credentials, and that all access to client credentials is properly logged and audited for security and compliance purposes. High As a Security Specialist, I want to use credentials to secure my access to the system so that only I can create orders. \u2014 The System must have the ability to invoke the PayPal authorization service in order to generate an access token. \u2014 The System must ensure that the access token is securely stored and managed, and that it is only used for the purposes for which it was granted. High","title":"Solution Requirements"},{"location":"#top-up-account-via-paypal","text":"Top up a bank account via PayPal service means to transfer funds from a PayPal account to a bank account. To top up a bank account via PayPal, the individual or business making the top-up will need to have a PayPal account and sufficient funds available in their account to complete the top-up.","title":"Top up account via PayPal"},{"location":"#use-cases_1","text":"Top up account via PayPal Participants End User, User Interface, Bank Server, Payment Platform, PayPal Processing Trigger End User wants to top up account via PayPal Diagram Main Flow 01: End User enters amount and clicks on the button to top up account via PayPal 02: User Interface sends request to Bank Server to create the order 03: Bank Server sends request to Payment Platform to create the Payment 04: Payment Platform sends request to PayPal Processing to create the order 05: PayPal Processing creates the order 06: PayPal processing returns to Payment Platform HTTP 201 Created code with order identifier, status and link to authorize payment 07: Payment Platform returns to Bank Server HTTP 201 Created code with payment data including order identifier, status and link 08: Bank Server returns to User Interface result with order identifier, status and link 09: User Interface redirects End User to the link to authorize payment 10: End User authorizes payment for the order 11: Authorization Page authorizes payment for the order 12: Authorization Page redirects back End User to the Banks User Interface 13: End User is waiting payment processing 14: User Interface sends request Bank Server to capture payment for order 15: Bank Server sends request to Payment Platform to submit the payment 16: Payment Platform sends request to PayPal Processing to capture payment for order 17: PayPal Ptocessing transfers money from End User account to Bank PayPal account 18: PayPal processing returns to Payment Platform HTTP 201 Created code with order identifier and status 19: Payment Platform returns to Bank Server HTTP 201 Created code with payment data including order identifier and status 20: Bank Server returns result to User Interface 21: User Interface renders operation result to the End User Alternative and Negative Flows \u2014 Step 04 of the Main flow: Authentication failed due to invalid authentication credentials or a missing Authorization header => PayPal returns HTTP 401 Unauthorized => Payment Platform repeats Generate access token use case and request to PayPal \u2014 Step 16 of the Main flow: Payer has not yet approved the Order for payment => PayPal returns HTTP 422 Unprocessable Entity => Payment Platform returns to Bank HTTP 422 Unprocessable Entity Result Client successfully topped up account via PayPal","title":"Use Cases"},{"location":"#solution-requirements_1","text":"User Story Requirements Priority As an End User, I want to be able to transfer funds from my PayPal account to my bank account so that I can access and use the money in my PayPal account. \u2014 The System must provide a service for creating payments through PayPal. \u2014 The System must have the capability to invoke the PayPal create order service in order to initiate a payment through PayPal. High As an End User, I want to be able to authorize payments in order to ensure that only I can make payments through my PayPal account. \u2014 The system must provide a link to the PayPal authorization page in order to allow end users to securely authorize the payment. \u2014 The System must provide a service for submitting payments through PayPal. \u2014 The System must have the capability to invoke the PayPal capture payment for order service in order to capture payment for an order High","title":"Solution Requirements"},{"location":"#show-order-details","text":"In cases where the system experiences a response timeout or misses transaction data, it must be able to retrieve order details from PayPal in order to ensure the integrity of the financial transactions.","title":"Show order details"},{"location":"#use-cases_2","text":"Show Order Details Participants Bank Server, Payment Platform, PayPal Processing Trigger Bank wants to fetch order details Diagram Main Flow 01: Bank Server sends request to Payment Platform to fetch a payment resource by using the resource identifier 02: Payment Platform sends to PayPal Processing request to show order details 03: PayPal finds order by identifier 04: PayPal returns to Payment Platform HTTP 200 OK code with order details 05: Payment Platform returns to Bank Server HTTP 200 OK code with order details Alternative and Negative Flows \u2014 Step 02 of the Main flow : There is no order with requested ID => Bank Server gets HTTP 404 Not Found Result Order details were provided","title":"Use Cases"},{"location":"#solution-requirements_2","text":"User Story Requirements Priority As a Payment Monitoring Specialist, I want to be able to track orders in PayPal in order to monitor and manage financial transactions. \u2014 The System must provide a service for fetching payment details through PayPal. \u2014 The System must have the capability to invoke the PayPal show order details service in order to get order details Medium","title":"Solution Requirements"},{"location":"about/","text":"Dzianis Kuziomkin A Business System Analyst with five years of experience in the IT industry. Strong analytical skills and ability to work collaboratively to achieve results. Proficient in determining product specifications, creating plans for product development, and conducting in-depth research to make informed decisions. Experience includes work on seven projects in the banking, insurance, and e-payments domains. Skills include business analysis, data analysis, SQL, Python, Swagger API, Postman, UML, PlanUML, and Git. Proficient in REST API, SOAP API, Azure Cloud, Microsoft SQL Server, MySQL, web services, and mobile services. Holds certifications in Azure Fundamentals, Azure Data Fundamentals, Databricks Lakehouse Fundamentals and Entry-Level Python Programmer. You can reach the author through LinkedIn","title":"Author"},{"location":"about/#dzianis-kuziomkin","text":"A Business System Analyst with five years of experience in the IT industry. Strong analytical skills and ability to work collaboratively to achieve results. Proficient in determining product specifications, creating plans for product development, and conducting in-depth research to make informed decisions. Experience includes work on seven projects in the banking, insurance, and e-payments domains. Skills include business analysis, data analysis, SQL, Python, Swagger API, Postman, UML, PlanUML, and Git. Proficient in REST API, SOAP API, Azure Cloud, Microsoft SQL Server, MySQL, web services, and mobile services. Holds certifications in Azure Fundamentals, Azure Data Fundamentals, Databricks Lakehouse Fundamentals and Entry-Level Python Programmer. You can reach the author through LinkedIn","title":"Dzianis Kuziomkin"},{"location":"glossary/","text":"Glossary # Term Defenition 1 API (Application Programming Interface) It is a set of rules, protocols, and tools for building software and applications. It specifies how software components should interact and exposes certain functionality to other components or systems. 2 API Consumer A client or system that uses an API to access the functionality or data provided by the API. 3 API Documentation Detailed information about an API, including the API's functions and resources, the parameters and data required by the functions, and the format of the requests and responses. 4 API Endpoint A specific URL or address that represents a specific function or resource provided by an API. 5 API Gateway A server or service that acts as an intermediary between API Consumers and an API, and is responsible for routing API requests and responses, handling authentication and authorization, and providing other functions such as load balancing and rate limiting. 6 API Key A unique identifier that is used to authenticate API requests and authorize access to the API. 7 API Provider A server or system that provides an API and exposes certain functionality or data to API Consumers. 8 API Request A request made to an API by a client or system in order to access or use the functionality or data provided by the API. 9 API Response A response returned by an API server in response to an API request. 10 Access token It is a unique code that allows the System to access the PayPal API on behalf of the client. 11 Authentication It is the process of verifying the identity of a user, device, or system. It involves establishing that a user, device, or system is who or what it claims to be. 12 Authorization It is the process of determining whether a user, device, or system has the permission to access a specific resource or perform a specific action. It involves verifying that a user, device, or system has the necessary privileges or permissions to access a resource or perform an action. 13 Database It is a collection of data that is organized in a structured manner and stored in a computer system. It is designed to allow efficient access to, manipulation of, and management of the data. 14 Platform Platform is a cloud native payments-as-a-service platform that designs, builds, and manages payment technology 15 HTTP (Hypertext Transfer Protocol) It is a protocol for transmitting data over the internet. It is the foundation of the World Wide Web and is used to transfer hypertext documents (such as web pages) between clients (such as web browsers) and servers. 16 HTTP Code A numerical status code that is returned by an HTTP server in response to a request. HTTP codes are used to indicate the status of the request, such as success, error, or redirection. 17 PayPal An online payment service that allows individuals and businesses to send and receive payments, and to make online purchases. 18 Signature A digital signature is a method of verifying the authenticity and integrity of a digital message or document. It works by using a private key to create a unique, encrypted message digest (also known as a \"signature\") that is attached to the document. The signature can then be verified using the corresponding public key. 19 User Interface It is the part of a computer system or application that is responsible for presenting information to the user and allowing the user to interact with the system or application.","title":"Glossary"},{"location":"glossary/#glossary","text":"# Term Defenition 1 API (Application Programming Interface) It is a set of rules, protocols, and tools for building software and applications. It specifies how software components should interact and exposes certain functionality to other components or systems. 2 API Consumer A client or system that uses an API to access the functionality or data provided by the API. 3 API Documentation Detailed information about an API, including the API's functions and resources, the parameters and data required by the functions, and the format of the requests and responses. 4 API Endpoint A specific URL or address that represents a specific function or resource provided by an API. 5 API Gateway A server or service that acts as an intermediary between API Consumers and an API, and is responsible for routing API requests and responses, handling authentication and authorization, and providing other functions such as load balancing and rate limiting. 6 API Key A unique identifier that is used to authenticate API requests and authorize access to the API. 7 API Provider A server or system that provides an API and exposes certain functionality or data to API Consumers. 8 API Request A request made to an API by a client or system in order to access or use the functionality or data provided by the API. 9 API Response A response returned by an API server in response to an API request. 10 Access token It is a unique code that allows the System to access the PayPal API on behalf of the client. 11 Authentication It is the process of verifying the identity of a user, device, or system. It involves establishing that a user, device, or system is who or what it claims to be. 12 Authorization It is the process of determining whether a user, device, or system has the permission to access a specific resource or perform a specific action. It involves verifying that a user, device, or system has the necessary privileges or permissions to access a resource or perform an action. 13 Database It is a collection of data that is organized in a structured manner and stored in a computer system. It is designed to allow efficient access to, manipulation of, and management of the data. 14 Platform Platform is a cloud native payments-as-a-service platform that designs, builds, and manages payment technology 15 HTTP (Hypertext Transfer Protocol) It is a protocol for transmitting data over the internet. It is the foundation of the World Wide Web and is used to transfer hypertext documents (such as web pages) between clients (such as web browsers) and servers. 16 HTTP Code A numerical status code that is returned by an HTTP server in response to a request. HTTP codes are used to indicate the status of the request, such as success, error, or redirection. 17 PayPal An online payment service that allows individuals and businesses to send and receive payments, and to make online purchases. 18 Signature A digital signature is a method of verifying the authenticity and integrity of a digital message or document. It works by using a private key to create a unique, encrypted message digest (also known as a \"signature\") that is attached to the document. The signature can then be verified using the corresponding public key. 19 User Interface It is the part of a computer system or application that is responsible for presenting information to the user and allowing the user to interact with the system or application.","title":"Glossary"}]}